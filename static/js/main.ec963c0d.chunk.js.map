{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","App","useState","titleInput","setTitleInput","userSelect","setUserSelect","todoTextError","setTodoTextError","userError","setUserError","todosFromServer","setTodos","visibleTodos","usersFromServer","find","action","method","onSubmit","event","preventDefault","trim","Math","max","htmlFor","type","placeholder","value","onChange","currentTarget","defaultValue","disabled","u","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec963c0d.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ninterface Props {\n  key: number;\n  todo: TodoWithUser;\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n}) => (\n  <article\n    data-id={todo.id}\n    className={\n      classNames('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })\n    }\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { TodoWithUser } from '../../types/TodoWithUser';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => {\n      return (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      );\n    })}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\n\nexport const App = () => {\n  const [titleInput, setTitleInput] = useState('');\n  const [userSelect, setUserSelect] = useState(0);\n  const [todoTextError, setTodoTextError] = useState(false);\n  const [userError, setUserError] = useState(false);\n  const [todos, setTodos] = useState([...todosFromServer]);\n\n  function getMaxId() {\n    const maxId: number = Math.max(...todos.map(todo => todo.id));\n\n    return maxId + 1;\n  }\n\n  function getTodosWithUser(id: number) {\n    return usersFromServer.find(user => user.id === id);\n  }\n\n  const visibleTodos = todos.map(todo => (\n    { ...todo, user: getTodosWithUser(todo.userId) as User }\n  ));\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!titleInput.trim()) {\n      setTodoTextError(true);\n      setTitleInput('');\n    }\n\n    if (userSelect === 0) {\n      setUserError(true);\n    }\n\n    if (userSelect && titleInput.trim()) {\n      setTodos([...todos, {\n        id: getMaxId(),\n        title: titleInput,\n        completed: false,\n        userId: userSelect,\n      }]);\n\n      setTitleInput('');\n      setUserSelect(0);\n      setTodoTextError(false);\n      setUserError(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"\">\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={titleInput}\n              onChange={event => {\n                setTitleInput(event.currentTarget.value);\n                setTodoTextError(false);\n              }}\n            />\n            {todoTextError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"\">\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              defaultValue={0}\n              onChange={(event) => {\n                setUserSelect(+event.currentTarget.value);\n                setUserError(false);\n              }}\n              value={userSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(u => (\n                <option\n                  value={u.id}\n                  key={u.id}\n                >\n                  {u.name}\n                </option>\n              ))}\n            </select>\n            {userError && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={visibleTodos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}